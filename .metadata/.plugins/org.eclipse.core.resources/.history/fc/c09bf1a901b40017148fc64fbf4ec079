package gr.joints;

import com.badlogic.gdx.ApplicationAdapter;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.physics.box2d.Box2DDebugRenderer;
import com.badlogic.gdx.physics.box2d.World;

import gr.joints.managers.MyScreenManager;

public class MyGame extends ApplicationAdapter {
	private SpriteBatch batch;
	private Texture img;
	private OrthographicCamera cam;
	private MyScreenManager myScreenManager;
	private World world;
	private Box2DDebugRenderer b2drenderer;
	
	private final float PPM = 1/45f;
	
	private float accum;
	
	
	@Override
	public void create () {
		myScreenManager = new MyScreenManager(this);
		batch = new SpriteBatch();
		img = new Texture("badlogic.jpg");
		cam = new OrthographicCamera();
		world = new World(new Vector2(0, -9.81f), false);
		b2drenderer = new Box2DDebugRenderer();
	}
	
	public void update(float dt) {
		world.step(PPM,  6,  2);
	}

	@Override
	public void render () {
		Gdx.gl.glClearColor(0.3f, 0.6f, 0.9f, 1);
		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		
		accum += Gdx.graphics.getDeltaTime();
		while(accum >= PPM) {
			accum -= PPM;
			update(PPM);
		}
		
		b2drenderer.render(world, cam.combined);
		
		batch.begin();
		batch.draw(img, 0, 0);
		batch.end();
	}
	
	@Override
	public void resize(int width, int height) {
		cam.setToOrtho(false, width, height);
		System.out.println("width = "+width+"\nheight = "+height+"\n");
	}
	
	@Override
	public void dispose () {
		batch.dispose();
		img.dispose();
	}
}
